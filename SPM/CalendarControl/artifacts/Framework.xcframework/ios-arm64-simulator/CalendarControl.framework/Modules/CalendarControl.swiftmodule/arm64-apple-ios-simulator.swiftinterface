// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios17.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name CalendarControl
@_exported import CalendarControl
import Foundation
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct CalendarView : SwiftUI.View {
  @SwiftUI.Binding @_projectedValueProperty($selectedDate) public var selectedDate: Foundation.Date? {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  public var $selectedDate: SwiftUI.Binding<Foundation.Date?> {
    get
  }
  public init(selectedDate: SwiftUI.Binding<Foundation.Date?>, colorSelected: SwiftUI.Color = .blue, colorUnSelected: SwiftUI.Color = .clear)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15CalendarControl0A4ViewV4bodyQrvp", 0) __
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class CalendarViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
